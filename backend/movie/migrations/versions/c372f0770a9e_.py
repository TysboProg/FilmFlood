"""empty message

Revision ID: c372f0770a9e
Revises:
Create Date: 2025-03-20 00:17:18.510432

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c372f0770a9e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "actors",
        sa.Column("actor_name", sa.String(), nullable=False),
        sa.Column("career", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column("date_of_birth", sa.DateTime(), nullable=False),
        sa.Column("place_of_birth", sa.String(), nullable=False),
        sa.Column("sex", sa.String(), nullable=False),
        sa.Column("age", sa.Integer(), nullable=False),
        sa.Column("growth", sa.String(), nullable=False),
        sa.Column("biography", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("actor_name"),
        sa.UniqueConstraint("biography"),
    )
    op.create_table(
        "countries",
        sa.Column("country_name", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("country_name"),
    )
    op.create_table(
        "films",
        sa.Column("film_name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("year_prod", sa.Integer(), nullable=False),
        sa.Column("age_rating", sa.String(), nullable=False),
        sa.Column("watch_time", sa.String(), nullable=False),
        sa.Column("rating", sa.Float(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("film_name"),
    )
    op.create_table(
        "genres",
        sa.Column("genre_name", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("genre_name"),
    )
    op.create_table(
        "comments",
        sa.Column("film_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("rating", sa.Float(), nullable=False),
        sa.Column("comment", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["film_id"],
            ["films.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "film_actor",
        sa.Column("film_id", sa.UUID(), nullable=False),
        sa.Column("actor_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["actor_id"],
            ["actors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["film_id"],
            ["films.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "film_country_association",
        sa.Column("film_id", sa.UUID(), nullable=False),
        sa.Column("country_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["countries.id"],
        ),
        sa.ForeignKeyConstraint(
            ["film_id"],
            ["films.id"],
        ),
        sa.PrimaryKeyConstraint("film_id", "country_id"),
    )
    op.create_table(
        "film_genre_association",
        sa.Column("film_id", sa.UUID(), nullable=False),
        sa.Column("genre_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["film_id"],
            ["films.id"],
        ),
        sa.ForeignKeyConstraint(
            ["genre_id"],
            ["genres.id"],
        ),
        sa.PrimaryKeyConstraint("film_id", "genre_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("film_genre_association")
    op.drop_table("film_country_association")
    op.drop_table("film_actor")
    op.drop_table("comments")
    op.drop_table("genres")
    op.drop_table("films")
    op.drop_table("countries")
    op.drop_table("actors")
    # ### end Alembic commands ###
